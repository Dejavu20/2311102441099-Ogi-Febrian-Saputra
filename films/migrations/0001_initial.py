# Generated by Django 5.1.7 on 2025-06-28 00:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField()),
                ('synopsis', models.TextField(help_text='Detailed synopsis of the film')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='film_posters/')),
                ('trailer_url', models.URLField(blank=True, help_text='YouTube or other video URL')),
                ('director', models.CharField(max_length=200)),
                ('cast', models.TextField(help_text='Main cast members, separated by commas')),
                ('release_date', models.DateField()),
                ('duration', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('rating', models.CharField(choices=[('G', 'General Audiences'), ('PG', 'Parental Guidance'), ('PG-13', 'Parents Strongly Cautioned'), ('R', 'Restricted'), ('NC-17', 'Adults Only')], default='PG', max_length=10)),
                ('imdb_rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('featured', models.BooleanField(default=False, help_text='Show in featured section')),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='films', to=settings.AUTH_USER_MODEL)),
                ('genres', models.ManyToManyField(related_name='films', to='films.genre')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FilmReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='films.film')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('film', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='film',
            index=models.Index(fields=['status', '-created_at'], name='films_film_status_58bca6_idx'),
        ),
        migrations.AddIndex(
            model_name='film',
            index=models.Index(fields=['featured', '-created_at'], name='films_film_feature_7923e9_idx'),
        ),
    ]
